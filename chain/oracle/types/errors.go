package types

import (
	"cosmossdk.io/errors"
)

var (
	ErrEmptyRelayerAddr            = errors.Register(ModuleName, 1, "relayer address is empty")
	ErrBadRatesCount               = errors.Register(ModuleName, 2, "bad rates count")
	ErrBadResolveTimesCount        = errors.Register(ModuleName, 3, "bad resolve times")
	ErrBadRequestIDsCount          = errors.Register(ModuleName, 4, "bad request ID")
	ErrRelayerNotAuthorized        = errors.Register(ModuleName, 5, "relayer not authorized")
	ErrBadPriceFeedBaseCount       = errors.Register(ModuleName, 6, "bad price feed base count")
	ErrBadPriceFeedQuoteCount      = errors.Register(ModuleName, 7, "bad price feed quote count")
	ErrUnsupportedOracleType       = errors.Register(ModuleName, 8, "unsupported oracle type")
	ErrBadMessagesCount            = errors.Register(ModuleName, 9, "bad messages count")
	ErrBadCoinbaseMessage          = errors.Register(ModuleName, 10, "bad Coinbase message")
	ErrInvalidEthereumSignature    = errors.Register(ModuleName, 11, "bad Ethereum signature")
	ErrBadCoinbaseMessageTimestamp = errors.Register(ModuleName, 12, "bad Coinbase message timestamp")
	ErrCoinbasePriceNotFound       = errors.Register(ModuleName, 13, "Coinbase price not found")
	ErrBadPrice                    = errors.Register(ModuleName, 14, "Prices must be positive")
	ErrPriceTooLarge               = errors.Register(ModuleName, 15, "Prices must be less than 10 million.")
	ErrInvalidBandIBCRequest       = errors.Register(ModuleName, 16, "Invalid Band IBC Request")
	ErrSample                      = errors.Register(ModuleName, 17, "sample error")
	ErrInvalidPacketTimeout        = errors.Register(ModuleName, 18, "invalid packet timeout")
	ErrBadSymbolsCount             = errors.Register(ModuleName, 19, "invalid symbols count")
	ErrBadIBCPortBind              = errors.Register(ModuleName, 20, "could not claim port capability")
	ErrInvalidPortID               = errors.Register(ModuleName, 21, "invalid IBC Port ID")
	ErrInvalidChannelID            = errors.Register(ModuleName, 22, "invalid IBC Channel ID")
	ErrBadRequestInterval          = errors.Register(ModuleName, 23, "invalid Band IBC request interval")
	ErrInvalidBandIBCUpdateRequest = errors.Register(ModuleName, 24, "Invalid Band IBC Update Request Proposal")
	ErrBandIBCRequestNotFound      = errors.Register(ModuleName, 25, "Band IBC Oracle Request not found")
	ErrEmptyBaseInfo               = errors.Register(ModuleName, 26, "Base Info is empty")
	ErrEmptyProvider               = errors.Register(ModuleName, 27, "provider is empty")
	ErrInvalidProvider             = errors.Register(ModuleName, 28, "invalid provider name")
	ErrInvalidSymbol               = errors.Register(ModuleName, 29, "invalid symbol")
	ErrRelayerAlreadyExists        = errors.Register(ModuleName, 30, "relayer already exists")
	ErrProviderPriceNotFound       = errors.Register(ModuleName, 31, "provider price not found")
	ErrInvalidOracleRequest        = errors.Register(ModuleName, 32, "invalid oracle request")
	ErrOraclePriceNotFound         = errors.Register(ModuleName, 33, "no price for oracle was found")
	ErrPythContractNotFound        = errors.Register(ModuleName, 34, "no address for Pyth contract found")
	ErrUnauthorizedPythPriceRelay  = errors.Register(ModuleName, 35, "unauthorized Pyth price relay")
	ErrInvalidPythPriceID          = errors.Register(ModuleName, 36, "unauthorized Pyth price relay")
	ErrInvalidPythExponent         = errors.Register(ModuleName, 37, "unauthorized Pyth price relay")
	ErrInvalidPythPublishTime      = errors.Register(ModuleName, 38, "unauthorized Pyth price relay")
	ErrEmptyPriceAttestations      = errors.Register(ModuleName, 39, "empty price attestations")
)
