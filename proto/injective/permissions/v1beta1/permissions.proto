syntax = "proto3";
package injective.permissions.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/InjectiveLabs/injective-core/injective-chain/modules/permissions/types";

// Namespace defines a permissions namespace
message Namespace {
  string denom = 1; // tokenfactory denom to which this namespace applies to
  string wasm_hook =
      2; // address of smart contract to apply code-based restrictions

  bool mints_paused = 3;
  bool sends_paused = 4;
  bool burns_paused = 5;

  repeated Role role_permissions = 6; // permissions for each role

  repeated AddressRoles address_roles = 7;
}

message AddressRoles {
  string address = 1;
  repeated string roles = 2;
}

// each Action enum value should be a power of two
enum Action {
  UNSPECIFIED = 0;
  MINT = 1;
  RECEIVE = 2;
  BURN = 4;
}

// Role is only used for storage
message Role {
  string role = 1;
  uint32 permissions = 2;
}

// used in storage
message RoleIDs { repeated uint32 role_ids = 1; }

message Voucher {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message AddressVoucher {
  string address = 1;
  Voucher voucher = 2;
}