syntax = "proto3";
package injective.auction.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
option go_package = "github.com/InjectiveLabs/sdk-go/chain/auction/types";

// Msg defines the auction Msg service.
service Msg {

  // Bid defines a method for placing a bid for an auction
  rpc Bid(MsgBid) returns (MsgBidResponse);
}

// Bid defines a SDK message for placing a bid for an auction
message MsgBid {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  string sender = 1;
  // amount of the bid in INJ tokens
  cosmos.base.v1beta1.Coin bid_amount = 2 [(gogoproto.nullable) = false];
  // the current auction round being bid on
  uint64 round = 3;
}

message MsgBidResponse{}
