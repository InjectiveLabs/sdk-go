syntax = "proto3";
package injective.types.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/InjectiveLabs/injective-core/injective-chain/types";

message ExtensionOptionsWeb3Tx {
  option (gogoproto.goproto_getters) = false;

  // typedDataChainID used only in EIP712 Domain and should match
  // Ethereum network ID in a Web3 provider (e.g. Metamask).
  uint64 typedDataChainID = 1;

  // feePayer is an account address for the fee payer. It will be validated
  // during EIP712 signature checking.
  string feePayer = 2;

  // feePayerSig is a signature data from the fee paying account,
  // allows to perform fee delegation when using EIP712 Domain.
  bytes feePayerSig = 3;
}
