// Code generated with goa v3.5.2, DO NOT EDIT.
//
// EventProviderAPI protocol buffer definition
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-indexer/api/design -o ../

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: event_provider_api.proto

package event_provider_apipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLatestHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLatestHeightRequest) Reset() {
	*x = GetLatestHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestHeightRequest) ProtoMessage() {}

func (x *GetLatestHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestHeightRequest.ProtoReflect.Descriptor instead.
func (*GetLatestHeightRequest) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{0}
}

type GetLatestHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response version.
	V string `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	// Status of the response.
	S string `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	// Error message.
	E    string             `protobuf:"bytes,3,opt,name=e,proto3" json:"e,omitempty"`
	Data *LatestBlockHeight `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetLatestHeightResponse) Reset() {
	*x = GetLatestHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestHeightResponse) ProtoMessage() {}

func (x *GetLatestHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestHeightResponse.ProtoReflect.Descriptor instead.
func (*GetLatestHeightResponse) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetLatestHeightResponse) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *GetLatestHeightResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *GetLatestHeightResponse) GetE() string {
	if x != nil {
		return x.E
	}
	return ""
}

func (x *GetLatestHeightResponse) GetData() *LatestBlockHeight {
	if x != nil {
		return x.Data
	}
	return nil
}

// Latest block height from event provider db
type LatestBlockHeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *LatestBlockHeight) Reset() {
	*x = LatestBlockHeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestBlockHeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestBlockHeight) ProtoMessage() {}

func (x *LatestBlockHeight) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestBlockHeight.ProtoReflect.Descriptor instead.
func (*LatestBlockHeight) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{2}
}

func (x *LatestBlockHeight) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type StreamBlockEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Select backend processor
	Backend string `protobuf:"bytes,1,opt,name=backend,proto3" json:"backend,omitempty"`
	Height  int32  `protobuf:"zigzag32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *StreamBlockEventsRequest) Reset() {
	*x = StreamBlockEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamBlockEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBlockEventsRequest) ProtoMessage() {}

func (x *StreamBlockEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBlockEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamBlockEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{3}
}

func (x *StreamBlockEventsRequest) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *StreamBlockEventsRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type StreamBlockEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *StreamBlockEventsResponse) Reset() {
	*x = StreamBlockEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamBlockEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBlockEventsResponse) ProtoMessage() {}

func (x *StreamBlockEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBlockEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamBlockEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{4}
}

func (x *StreamBlockEventsResponse) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height  int64  `protobuf:"zigzag64,1,opt,name=height,proto3" json:"height,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Processed block events in the block
	Events []*BlockEvent `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	// Indicates whether the block is the latest one available in the event provider
	InSync bool `protobuf:"varint,4,opt,name=in_sync,json=inSync,proto3" json:"in_sync,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{5}
}

func (x *Block) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Block) GetEvents() []*BlockEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Block) GetInSync() bool {
	if x != nil {
		return x.InSync
	}
	return false
}

type BlockEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event type
	TypeUrl string `protobuf:"bytes,1,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	// Event data
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// TX hash
	TxHash []byte `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *BlockEvent) Reset() {
	*x = BlockEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEvent) ProtoMessage() {}

func (x *BlockEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEvent.ProtoReflect.Descriptor instead.
func (*BlockEvent) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{6}
}

func (x *BlockEvent) GetTypeUrl() string {
	if x != nil {
		return x.TypeUrl
	}
	return ""
}

func (x *BlockEvent) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BlockEvent) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type GetBlockEventsRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Select backend processor
	Backend string `protobuf:"bytes,1,opt,name=backend,proto3" json:"backend,omitempty"`
	Height  int32  `protobuf:"zigzag32,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetBlockEventsRPCRequest) Reset() {
	*x = GetBlockEventsRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockEventsRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockEventsRPCRequest) ProtoMessage() {}

func (x *GetBlockEventsRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockEventsRPCRequest.ProtoReflect.Descriptor instead.
func (*GetBlockEventsRPCRequest) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetBlockEventsRPCRequest) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *GetBlockEventsRPCRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockEventsRPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response version.
	V string `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	// Status of the response.
	S string `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	// Error message.
	E    string          `protobuf:"bytes,3,opt,name=e,proto3" json:"e,omitempty"`
	Data *BlockEventsRPC `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetBlockEventsRPCResponse) Reset() {
	*x = GetBlockEventsRPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockEventsRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockEventsRPCResponse) ProtoMessage() {}

func (x *GetBlockEventsRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockEventsRPCResponse.ProtoReflect.Descriptor instead.
func (*GetBlockEventsRPCResponse) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetBlockEventsRPCResponse) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *GetBlockEventsRPCResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *GetBlockEventsRPCResponse) GetE() string {
	if x != nil {
		return x.E
	}
	return ""
}

func (x *GetBlockEventsRPCResponse) GetData() *BlockEventsRPC {
	if x != nil {
		return x.Data
	}
	return nil
}

// Processed block events for backend processor to consume
type BlockEventsRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of event types
	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	// Array of parsed events
	Events [][]byte `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	// Map of event index - tx hash
	TxHashes map[int32][]byte `protobuf:"bytes,3,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty" protobuf_key:"zigzag32,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BlockEventsRPC) Reset() {
	*x = BlockEventsRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockEventsRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEventsRPC) ProtoMessage() {}

func (x *BlockEventsRPC) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEventsRPC.ProtoReflect.Descriptor instead.
func (*BlockEventsRPC) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{9}
}

func (x *BlockEventsRPC) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *BlockEventsRPC) GetEvents() [][]byte {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *BlockEventsRPC) GetTxHashes() map[int32][]byte {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

type GetCustomEventsRPCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Select backend processor
	Backend string `protobuf:"bytes,1,opt,name=backend,proto3" json:"backend,omitempty"`
	Height  int32  `protobuf:"zigzag32,2,opt,name=height,proto3" json:"height,omitempty"`
	// Specify custom events to get
	Events string `protobuf:"bytes,3,opt,name=events,proto3" json:"events,omitempty"`
}

func (x *GetCustomEventsRPCRequest) Reset() {
	*x = GetCustomEventsRPCRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomEventsRPCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomEventsRPCRequest) ProtoMessage() {}

func (x *GetCustomEventsRPCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomEventsRPCRequest.ProtoReflect.Descriptor instead.
func (*GetCustomEventsRPCRequest) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{10}
}

func (x *GetCustomEventsRPCRequest) GetBackend() string {
	if x != nil {
		return x.Backend
	}
	return ""
}

func (x *GetCustomEventsRPCRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetCustomEventsRPCRequest) GetEvents() string {
	if x != nil {
		return x.Events
	}
	return ""
}

type GetCustomEventsRPCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response version.
	V string `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	// Status of the response.
	S string `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	// Error message.
	E    string          `protobuf:"bytes,3,opt,name=e,proto3" json:"e,omitempty"`
	Data *BlockEventsRPC `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCustomEventsRPCResponse) Reset() {
	*x = GetCustomEventsRPCResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCustomEventsRPCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomEventsRPCResponse) ProtoMessage() {}

func (x *GetCustomEventsRPCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomEventsRPCResponse.ProtoReflect.Descriptor instead.
func (*GetCustomEventsRPCResponse) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetCustomEventsRPCResponse) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *GetCustomEventsRPCResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *GetCustomEventsRPCResponse) GetE() string {
	if x != nil {
		return x.E
	}
	return ""
}

func (x *GetCustomEventsRPCResponse) GetData() *BlockEventsRPC {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetABCIBlockEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int32 `protobuf:"zigzag32,1,opt,name=height,proto3" json:"height,omitempty"`
	// Array of event types
	EventTypes []string `protobuf:"bytes,2,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`
}

func (x *GetABCIBlockEventsRequest) Reset() {
	*x = GetABCIBlockEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetABCIBlockEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetABCIBlockEventsRequest) ProtoMessage() {}

func (x *GetABCIBlockEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetABCIBlockEventsRequest.ProtoReflect.Descriptor instead.
func (*GetABCIBlockEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{12}
}

func (x *GetABCIBlockEventsRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *GetABCIBlockEventsRequest) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

type GetABCIBlockEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Response version.
	V string `protobuf:"bytes,1,opt,name=v,proto3" json:"v,omitempty"`
	// Status of the response.
	S string `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	// Error message.
	E        string    `protobuf:"bytes,3,opt,name=e,proto3" json:"e,omitempty"`
	RawBlock *RawBlock `protobuf:"bytes,4,opt,name=raw_block,json=rawBlock,proto3" json:"raw_block,omitempty"`
}

func (x *GetABCIBlockEventsResponse) Reset() {
	*x = GetABCIBlockEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetABCIBlockEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetABCIBlockEventsResponse) ProtoMessage() {}

func (x *GetABCIBlockEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetABCIBlockEventsResponse.ProtoReflect.Descriptor instead.
func (*GetABCIBlockEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetABCIBlockEventsResponse) GetV() string {
	if x != nil {
		return x.V
	}
	return ""
}

func (x *GetABCIBlockEventsResponse) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *GetABCIBlockEventsResponse) GetE() string {
	if x != nil {
		return x.E
	}
	return ""
}

func (x *GetABCIBlockEventsResponse) GetRawBlock() *RawBlock {
	if x != nil {
		return x.RawBlock
	}
	return nil
}

type RawBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height           int64                    `protobuf:"zigzag64,1,opt,name=height,proto3" json:"height,omitempty"`
	TxsResults       []*ABCIResponseDeliverTx `protobuf:"bytes,2,rep,name=txs_results,json=txsResults,proto3" json:"txs_results,omitempty"`
	BeginBlockEvents []*ABCIEvent             `protobuf:"bytes,3,rep,name=begin_block_events,json=beginBlockEvents,proto3" json:"begin_block_events,omitempty"`
	EndBlockEvents   []*ABCIEvent             `protobuf:"bytes,4,rep,name=end_block_events,json=endBlockEvents,proto3" json:"end_block_events,omitempty"`
}

func (x *RawBlock) Reset() {
	*x = RawBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawBlock) ProtoMessage() {}

func (x *RawBlock) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawBlock.ProtoReflect.Descriptor instead.
func (*RawBlock) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{14}
}

func (x *RawBlock) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RawBlock) GetTxsResults() []*ABCIResponseDeliverTx {
	if x != nil {
		return x.TxsResults
	}
	return nil
}

func (x *RawBlock) GetBeginBlockEvents() []*ABCIEvent {
	if x != nil {
		return x.BeginBlockEvents
	}
	return nil
}

func (x *RawBlock) GetEndBlockEvents() []*ABCIEvent {
	if x != nil {
		return x.EndBlockEvents
	}
	return nil
}

type ABCIResponseDeliverTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32        `protobuf:"zigzag32,1,opt,name=code,proto3" json:"code,omitempty"`
	Log       string       `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Info      string       `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	GasWanted int64        `protobuf:"zigzag64,4,opt,name=gas_wanted,json=gasWanted,proto3" json:"gas_wanted,omitempty"`
	GasUsed   int64        `protobuf:"zigzag64,5,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Events    []*ABCIEvent `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
	Codespace string       `protobuf:"bytes,7,opt,name=codespace,proto3" json:"codespace,omitempty"`
}

func (x *ABCIResponseDeliverTx) Reset() {
	*x = ABCIResponseDeliverTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABCIResponseDeliverTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIResponseDeliverTx) ProtoMessage() {}

func (x *ABCIResponseDeliverTx) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIResponseDeliverTx.ProtoReflect.Descriptor instead.
func (*ABCIResponseDeliverTx) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{15}
}

func (x *ABCIResponseDeliverTx) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ABCIResponseDeliverTx) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ABCIResponseDeliverTx) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *ABCIResponseDeliverTx) GetGasWanted() int64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *ABCIResponseDeliverTx) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ABCIResponseDeliverTx) GetEvents() []*ABCIEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ABCIResponseDeliverTx) GetCodespace() string {
	if x != nil {
		return x.Codespace
	}
	return ""
}

type ABCIEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Attributes []*ABCIAttribute `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *ABCIEvent) Reset() {
	*x = ABCIEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABCIEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIEvent) ProtoMessage() {}

func (x *ABCIEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIEvent.ProtoReflect.Descriptor instead.
func (*ABCIEvent) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{16}
}

func (x *ABCIEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ABCIEvent) GetAttributes() []*ABCIAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type ABCIAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ABCIAttribute) Reset() {
	*x = ABCIAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_provider_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ABCIAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABCIAttribute) ProtoMessage() {}

func (x *ABCIAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_event_provider_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABCIAttribute.ProtoReflect.Descriptor instead.
func (*ABCIAttribute) Descriptor() ([]byte, []int) {
	return file_event_provider_api_proto_rawDescGZIP(), []int{17}
}

func (x *ABCIAttribute) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ABCIAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_event_provider_api_proto protoreflect.FileDescriptor

var file_event_provider_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x22, 0x18,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x76, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x65, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x11, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4c, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x22, 0x4e, 0x0a, 0x19, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x53, 0x79, 0x6e, 0x63,
	0x22, 0x56, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x4c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x7d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x76, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4d, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x2e, 0x54, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x65, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x7e, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x50, 0x43, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x42, 0x43, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x81, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x42, 0x43, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c,
	0x0a, 0x01, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x76, 0x12, 0x0c, 0x0a, 0x01,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x61, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x08, 0x72, 0x61, 0x77, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x22, 0x84, 0x02, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4a, 0x0a, 0x0b, 0x74, 0x78, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x42, 0x43, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x54, 0x78, 0x52, 0x0a, 0x74, 0x78, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x42, 0x43, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x10, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x42, 0x43, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x41,
	0x42, 0x43, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x61, 0x73, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x09, 0x67, 0x61, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x42,
	0x43, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x62, 0x0a,
	0x09, 0x41, 0x42, 0x43, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x42, 0x43, 0x49, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x22, 0x37, 0x0a, 0x0d, 0x41, 0x42, 0x43, 0x49, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xce, 0x04, 0x0a, 0x10, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x50, 0x49, 0x12,
	0x6a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x2a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x11, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x70, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x50, 0x43, 0x12, 0x2c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x73, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x12, 0x2d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x50, 0x43, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x42, 0x43,
	0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x42, 0x43, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x42, 0x43, 0x49, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61,
	0x70, 0x69, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_provider_api_proto_rawDescOnce sync.Once
	file_event_provider_api_proto_rawDescData = file_event_provider_api_proto_rawDesc
)

func file_event_provider_api_proto_rawDescGZIP() []byte {
	file_event_provider_api_proto_rawDescOnce.Do(func() {
		file_event_provider_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_provider_api_proto_rawDescData)
	})
	return file_event_provider_api_proto_rawDescData
}

var file_event_provider_api_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_event_provider_api_proto_goTypes = []interface{}{
	(*GetLatestHeightRequest)(nil),     // 0: event_provider_api.GetLatestHeightRequest
	(*GetLatestHeightResponse)(nil),    // 1: event_provider_api.GetLatestHeightResponse
	(*LatestBlockHeight)(nil),          // 2: event_provider_api.LatestBlockHeight
	(*StreamBlockEventsRequest)(nil),   // 3: event_provider_api.StreamBlockEventsRequest
	(*StreamBlockEventsResponse)(nil),  // 4: event_provider_api.StreamBlockEventsResponse
	(*Block)(nil),                      // 5: event_provider_api.Block
	(*BlockEvent)(nil),                 // 6: event_provider_api.BlockEvent
	(*GetBlockEventsRPCRequest)(nil),   // 7: event_provider_api.GetBlockEventsRPCRequest
	(*GetBlockEventsRPCResponse)(nil),  // 8: event_provider_api.GetBlockEventsRPCResponse
	(*BlockEventsRPC)(nil),             // 9: event_provider_api.BlockEventsRPC
	(*GetCustomEventsRPCRequest)(nil),  // 10: event_provider_api.GetCustomEventsRPCRequest
	(*GetCustomEventsRPCResponse)(nil), // 11: event_provider_api.GetCustomEventsRPCResponse
	(*GetABCIBlockEventsRequest)(nil),  // 12: event_provider_api.GetABCIBlockEventsRequest
	(*GetABCIBlockEventsResponse)(nil), // 13: event_provider_api.GetABCIBlockEventsResponse
	(*RawBlock)(nil),                   // 14: event_provider_api.RawBlock
	(*ABCIResponseDeliverTx)(nil),      // 15: event_provider_api.ABCIResponseDeliverTx
	(*ABCIEvent)(nil),                  // 16: event_provider_api.ABCIEvent
	(*ABCIAttribute)(nil),              // 17: event_provider_api.ABCIAttribute
	nil,                                // 18: event_provider_api.BlockEventsRPC.TxHashesEntry
}
var file_event_provider_api_proto_depIdxs = []int32{
	2,  // 0: event_provider_api.GetLatestHeightResponse.data:type_name -> event_provider_api.LatestBlockHeight
	5,  // 1: event_provider_api.StreamBlockEventsResponse.blocks:type_name -> event_provider_api.Block
	6,  // 2: event_provider_api.Block.events:type_name -> event_provider_api.BlockEvent
	9,  // 3: event_provider_api.GetBlockEventsRPCResponse.data:type_name -> event_provider_api.BlockEventsRPC
	18, // 4: event_provider_api.BlockEventsRPC.tx_hashes:type_name -> event_provider_api.BlockEventsRPC.TxHashesEntry
	9,  // 5: event_provider_api.GetCustomEventsRPCResponse.data:type_name -> event_provider_api.BlockEventsRPC
	14, // 6: event_provider_api.GetABCIBlockEventsResponse.raw_block:type_name -> event_provider_api.RawBlock
	15, // 7: event_provider_api.RawBlock.txs_results:type_name -> event_provider_api.ABCIResponseDeliverTx
	16, // 8: event_provider_api.RawBlock.begin_block_events:type_name -> event_provider_api.ABCIEvent
	16, // 9: event_provider_api.RawBlock.end_block_events:type_name -> event_provider_api.ABCIEvent
	16, // 10: event_provider_api.ABCIResponseDeliverTx.events:type_name -> event_provider_api.ABCIEvent
	17, // 11: event_provider_api.ABCIEvent.attributes:type_name -> event_provider_api.ABCIAttribute
	0,  // 12: event_provider_api.EventProviderAPI.GetLatestHeight:input_type -> event_provider_api.GetLatestHeightRequest
	3,  // 13: event_provider_api.EventProviderAPI.StreamBlockEvents:input_type -> event_provider_api.StreamBlockEventsRequest
	7,  // 14: event_provider_api.EventProviderAPI.GetBlockEventsRPC:input_type -> event_provider_api.GetBlockEventsRPCRequest
	10, // 15: event_provider_api.EventProviderAPI.GetCustomEventsRPC:input_type -> event_provider_api.GetCustomEventsRPCRequest
	12, // 16: event_provider_api.EventProviderAPI.GetABCIBlockEvents:input_type -> event_provider_api.GetABCIBlockEventsRequest
	1,  // 17: event_provider_api.EventProviderAPI.GetLatestHeight:output_type -> event_provider_api.GetLatestHeightResponse
	4,  // 18: event_provider_api.EventProviderAPI.StreamBlockEvents:output_type -> event_provider_api.StreamBlockEventsResponse
	8,  // 19: event_provider_api.EventProviderAPI.GetBlockEventsRPC:output_type -> event_provider_api.GetBlockEventsRPCResponse
	11, // 20: event_provider_api.EventProviderAPI.GetCustomEventsRPC:output_type -> event_provider_api.GetCustomEventsRPCResponse
	13, // 21: event_provider_api.EventProviderAPI.GetABCIBlockEvents:output_type -> event_provider_api.GetABCIBlockEventsResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_event_provider_api_proto_init() }
func file_event_provider_api_proto_init() {
	if File_event_provider_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_provider_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LatestBlockHeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamBlockEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamBlockEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockEventsRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockEventsRPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockEventsRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomEventsRPCRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCustomEventsRPCResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetABCIBlockEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetABCIBlockEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABCIResponseDeliverTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABCIEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_provider_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ABCIAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_provider_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_provider_api_proto_goTypes,
		DependencyIndexes: file_event_provider_api_proto_depIdxs,
		MessageInfos:      file_event_provider_api_proto_msgTypes,
	}.Build()
	File_event_provider_api_proto = out.File
	file_event_provider_api_proto_rawDesc = nil
	file_event_provider_api_proto_goTypes = nil
	file_event_provider_api_proto_depIdxs = nil
}
