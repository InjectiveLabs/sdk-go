// Code generated with goa v3.7.0, DO NOT EDIT.
//
// InjectiveAuctionRPC protocol buffer definition
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-indexer/api/design -o ../

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.24.4
// source: goadesign_goagen_injective_auction_rpc.proto

package injective_auction_rpcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuctionEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The auction round number. -1 for latest.
	Round int64 `protobuf:"zigzag64,1,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *AuctionEndpointRequest) Reset() {
	*x = AuctionEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionEndpointRequest) ProtoMessage() {}

func (x *AuctionEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionEndpointRequest.ProtoReflect.Descriptor instead.
func (*AuctionEndpointRequest) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *AuctionEndpointRequest) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

type AuctionEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The auction
	Auction *Auction `protobuf:"bytes,1,opt,name=auction,proto3" json:"auction,omitempty"`
	// Bids of the auction
	Bids []*Bid `protobuf:"bytes,2,rep,name=bids,proto3" json:"bids,omitempty"`
}

func (x *AuctionEndpointResponse) Reset() {
	*x = AuctionEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionEndpointResponse) ProtoMessage() {}

func (x *AuctionEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionEndpointResponse.ProtoReflect.Descriptor instead.
func (*AuctionEndpointResponse) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *AuctionEndpointResponse) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

func (x *AuctionEndpointResponse) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

type Auction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account address of the auction winner
	Winner string `protobuf:"bytes,1,opt,name=winner,proto3" json:"winner,omitempty"`
	// Coins in the basket
	Basket           []*Coin `protobuf:"bytes,2,rep,name=basket,proto3" json:"basket,omitempty"`
	WinningBidAmount string  `protobuf:"bytes,3,opt,name=winning_bid_amount,json=winningBidAmount,proto3" json:"winning_bid_amount,omitempty"`
	Round            uint64  `protobuf:"varint,4,opt,name=round,proto3" json:"round,omitempty"`
	// Auction end timestamp in UNIX millis.
	EndTimestamp int64 `protobuf:"zigzag64,5,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	// UpdatedAt timestamp in UNIX millis.
	UpdatedAt int64            `protobuf:"zigzag64,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Contract  *AuctionContract `protobuf:"bytes,7,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *Auction) Reset() {
	*x = Auction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auction) ProtoMessage() {}

func (x *Auction) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auction.ProtoReflect.Descriptor instead.
func (*Auction) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *Auction) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

func (x *Auction) GetBasket() []*Coin {
	if x != nil {
		return x.Basket
	}
	return nil
}

func (x *Auction) GetWinningBidAmount() string {
	if x != nil {
		return x.WinningBidAmount
	}
	return ""
}

func (x *Auction) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *Auction) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *Auction) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Auction) GetContract() *AuctionContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

type Coin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Denom of the coin
	Denom    string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount   string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	UsdValue string `protobuf:"bytes,3,opt,name=usd_value,json=usdValue,proto3" json:"usd_value,omitempty"`
}

func (x *Coin) Reset() {
	*x = Coin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *Coin) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *Coin) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Coin) GetUsdValue() string {
	if x != nil {
		return x.UsdValue
	}
	return ""
}

type AuctionContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Bid target of the auction
	BidTarget string `protobuf:"bytes,2,opt,name=bid_target,json=bidTarget,proto3" json:"bid_target,omitempty"`
	// Total slots of the auction
	CurrentSlots uint64 `protobuf:"varint,3,opt,name=current_slots,json=currentSlots,proto3" json:"current_slots,omitempty"`
	// Total slots of the auction
	TotalSlots uint64 `protobuf:"varint,4,opt,name=total_slots,json=totalSlots,proto3" json:"total_slots,omitempty"`
	// Max user allocation of the auction
	MaxUserAllocation string `protobuf:"bytes,5,opt,name=max_user_allocation,json=maxUserAllocation,proto3" json:"max_user_allocation,omitempty"`
	// Total committed amount of the auction
	TotalCommitted string `protobuf:"bytes,6,opt,name=total_committed,json=totalCommitted,proto3" json:"total_committed,omitempty"`
	// Whitelist addresses for the auction
	WhitelistAddresses []string `protobuf:"bytes,7,rep,name=whitelist_addresses,json=whitelistAddresses,proto3" json:"whitelist_addresses,omitempty"`
	// Auction start timestamp in UNIX millis.
	StartTimestamp uint64 `protobuf:"varint,8,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// Auction end timestamp in UNIX millis.
	EndTimestamp uint64 `protobuf:"varint,9,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
}

func (x *AuctionContract) Reset() {
	*x = AuctionContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionContract) ProtoMessage() {}

func (x *AuctionContract) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionContract.ProtoReflect.Descriptor instead.
func (*AuctionContract) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *AuctionContract) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AuctionContract) GetBidTarget() string {
	if x != nil {
		return x.BidTarget
	}
	return ""
}

func (x *AuctionContract) GetCurrentSlots() uint64 {
	if x != nil {
		return x.CurrentSlots
	}
	return 0
}

func (x *AuctionContract) GetTotalSlots() uint64 {
	if x != nil {
		return x.TotalSlots
	}
	return 0
}

func (x *AuctionContract) GetMaxUserAllocation() string {
	if x != nil {
		return x.MaxUserAllocation
	}
	return ""
}

func (x *AuctionContract) GetTotalCommitted() string {
	if x != nil {
		return x.TotalCommitted
	}
	return ""
}

func (x *AuctionContract) GetWhitelistAddresses() []string {
	if x != nil {
		return x.WhitelistAddresses
	}
	return nil
}

func (x *AuctionContract) GetStartTimestamp() uint64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *AuctionContract) GetEndTimestamp() uint64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

type Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account address of the bidder
	Bidder string `protobuf:"bytes,1,opt,name=bidder,proto3" json:"bidder,omitempty"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Bid timestamp in UNIX millis.
	Timestamp int64 `protobuf:"zigzag64,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Bid) Reset() {
	*x = Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bid) ProtoMessage() {}

func (x *Bid) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bid.ProtoReflect.Descriptor instead.
func (*Bid) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *Bid) GetBidder() string {
	if x != nil {
		return x.Bidder
	}
	return ""
}

func (x *Bid) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Bid) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type AuctionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuctionsRequest) Reset() {
	*x = AuctionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionsRequest) ProtoMessage() {}

func (x *AuctionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionsRequest.ProtoReflect.Descriptor instead.
func (*AuctionsRequest) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{6}
}

type AuctionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The historical auctions
	Auctions []*Auction `protobuf:"bytes,1,rep,name=auctions,proto3" json:"auctions,omitempty"`
}

func (x *AuctionsResponse) Reset() {
	*x = AuctionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionsResponse) ProtoMessage() {}

func (x *AuctionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionsResponse.ProtoReflect.Descriptor instead.
func (*AuctionsResponse) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *AuctionsResponse) GetAuctions() []*Auction {
	if x != nil {
		return x.Auctions
	}
	return nil
}

type AuctionsHistoryV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerPage int32 `protobuf:"zigzag32,1,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	// Pagination token
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// The ending timestamp in UNIX milliseconds to filter the auctions
	EndTime int64 `protobuf:"zigzag64,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *AuctionsHistoryV2Request) Reset() {
	*x = AuctionsHistoryV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionsHistoryV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionsHistoryV2Request) ProtoMessage() {}

func (x *AuctionsHistoryV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionsHistoryV2Request.ProtoReflect.Descriptor instead.
func (*AuctionsHistoryV2Request) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *AuctionsHistoryV2Request) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *AuctionsHistoryV2Request) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuctionsHistoryV2Request) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AuctionsHistoryV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The historical auctions
	Auctions []*Auction `protobuf:"bytes,1,rep,name=auctions,proto3" json:"auctions,omitempty"`
	// Next tokens for pagination
	Next []string `protobuf:"bytes,2,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *AuctionsHistoryV2Response) Reset() {
	*x = AuctionsHistoryV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionsHistoryV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionsHistoryV2Response) ProtoMessage() {}

func (x *AuctionsHistoryV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionsHistoryV2Response.ProtoReflect.Descriptor instead.
func (*AuctionsHistoryV2Response) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *AuctionsHistoryV2Response) GetAuctions() []*Auction {
	if x != nil {
		return x.Auctions
	}
	return nil
}

func (x *AuctionsHistoryV2Response) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type AuctionV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The auction round number.
	Round int64 `protobuf:"zigzag64,1,opt,name=round,proto3" json:"round,omitempty"`
}

func (x *AuctionV2Request) Reset() {
	*x = AuctionV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionV2Request) ProtoMessage() {}

func (x *AuctionV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionV2Request.ProtoReflect.Descriptor instead.
func (*AuctionV2Request) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *AuctionV2Request) GetRound() int64 {
	if x != nil {
		return x.Round
	}
	return 0
}

type AuctionV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The auction
	Auction *Auction `protobuf:"bytes,1,opt,name=auction,proto3" json:"auction,omitempty"`
}

func (x *AuctionV2Response) Reset() {
	*x = AuctionV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuctionV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuctionV2Response) ProtoMessage() {}

func (x *AuctionV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuctionV2Response.ProtoReflect.Descriptor instead.
func (*AuctionV2Response) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *AuctionV2Response) GetAuction() *Auction {
	if x != nil {
		return x.Auction
	}
	return nil
}

type AccountAuctionsV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address of account
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PerPage int32  `protobuf:"zigzag32,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	// Pagination token
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AccountAuctionsV2Request) Reset() {
	*x = AccountAuctionsV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAuctionsV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAuctionsV2Request) ProtoMessage() {}

func (x *AccountAuctionsV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAuctionsV2Request.ProtoReflect.Descriptor instead.
func (*AccountAuctionsV2Request) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *AccountAuctionsV2Request) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AccountAuctionsV2Request) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *AccountAuctionsV2Request) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AccountAuctionsV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The historical auctions
	Auctions []*AccountAuctionV2 `protobuf:"bytes,1,rep,name=auctions,proto3" json:"auctions,omitempty"`
	// Next tokens for pagination
	Next []string `protobuf:"bytes,2,rep,name=next,proto3" json:"next,omitempty"`
}

func (x *AccountAuctionsV2Response) Reset() {
	*x = AccountAuctionsV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAuctionsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAuctionsV2Response) ProtoMessage() {}

func (x *AccountAuctionsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAuctionsV2Response.ProtoReflect.Descriptor instead.
func (*AccountAuctionsV2Response) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *AccountAuctionsV2Response) GetAuctions() []*AccountAuctionV2 {
	if x != nil {
		return x.Auctions
	}
	return nil
}

func (x *AccountAuctionsV2Response) GetNext() []string {
	if x != nil {
		return x.Next
	}
	return nil
}

type AccountAuctionV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Round           uint64 `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	AmountDeposited string `protobuf:"bytes,3,opt,name=amount_deposited,json=amountDeposited,proto3" json:"amount_deposited,omitempty"`
	// Whether the auction rewards can be claimed.
	IsClaimable   bool             `protobuf:"varint,4,opt,name=is_claimable,json=isClaimable,proto3" json:"is_claimable,omitempty"`
	ClaimedAssets []*ClaimedAssets `protobuf:"bytes,5,rep,name=claimed_assets,json=claimedAssets,proto3" json:"claimed_assets,omitempty"`
}

func (x *AccountAuctionV2) Reset() {
	*x = AccountAuctionV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAuctionV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAuctionV2) ProtoMessage() {}

func (x *AccountAuctionV2) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAuctionV2.ProtoReflect.Descriptor instead.
func (*AccountAuctionV2) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *AccountAuctionV2) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountAuctionV2) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *AccountAuctionV2) GetAmountDeposited() string {
	if x != nil {
		return x.AmountDeposited
	}
	return ""
}

func (x *AccountAuctionV2) GetIsClaimable() bool {
	if x != nil {
		return x.IsClaimable
	}
	return false
}

func (x *AccountAuctionV2) GetClaimedAssets() []*ClaimedAssets {
	if x != nil {
		return x.ClaimedAssets
	}
	return nil
}

type ClaimedAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ClaimedAssets) Reset() {
	*x = ClaimedAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimedAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimedAssets) ProtoMessage() {}

func (x *ClaimedAssets) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimedAssets.ProtoReflect.Descriptor instead.
func (*ClaimedAssets) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *ClaimedAssets) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *ClaimedAssets) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type StreamBidsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamBidsRequest) Reset() {
	*x = StreamBidsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamBidsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBidsRequest) ProtoMessage() {}

func (x *StreamBidsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBidsRequest.ProtoReflect.Descriptor instead.
func (*StreamBidsRequest) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{16}
}

type StreamBidsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account address of the bidder
	Bidder    string `protobuf:"bytes,1,opt,name=bidder,proto3" json:"bidder,omitempty"`
	BidAmount string `protobuf:"bytes,2,opt,name=bid_amount,json=bidAmount,proto3" json:"bid_amount,omitempty"`
	Round     uint64 `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	// Operation timestamp in UNIX millis.
	Timestamp int64 `protobuf:"zigzag64,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *StreamBidsResponse) Reset() {
	*x = StreamBidsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamBidsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBidsResponse) ProtoMessage() {}

func (x *StreamBidsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBidsResponse.ProtoReflect.Descriptor instead.
func (*StreamBidsResponse) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *StreamBidsResponse) GetBidder() string {
	if x != nil {
		return x.Bidder
	}
	return ""
}

func (x *StreamBidsResponse) GetBidAmount() string {
	if x != nil {
		return x.BidAmount
	}
	return ""
}

func (x *StreamBidsResponse) GetRound() uint64 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *StreamBidsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type InjBurntEndpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InjBurntEndpointRequest) Reset() {
	*x = InjBurntEndpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjBurntEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjBurntEndpointRequest) ProtoMessage() {}

func (x *InjBurntEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjBurntEndpointRequest.ProtoReflect.Descriptor instead.
func (*InjBurntEndpointRequest) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{18}
}

type InjBurntEndpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalInjBurnt string `protobuf:"bytes,1,opt,name=total_inj_burnt,json=totalInjBurnt,proto3" json:"total_inj_burnt,omitempty"`
}

func (x *InjBurntEndpointResponse) Reset() {
	*x = InjBurntEndpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjBurntEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjBurntEndpointResponse) ProtoMessage() {}

func (x *InjBurntEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjBurntEndpointResponse.ProtoReflect.Descriptor instead.
func (*InjBurntEndpointResponse) Descriptor() ([]byte, []int) {
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *InjBurntEndpointResponse) GetTotalInjBurnt() string {
	if x != nil {
		return x.TotalInjBurnt
	}
	return ""
}

var File_goadesign_goagen_injective_auction_rpc_proto protoreflect.FileDescriptor

var file_goadesign_goagen_injective_auction_rpc_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x6f, 0x61, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x67, 0x6f, 0x61, 0x67,
	0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15,
	0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x70, 0x63, 0x22, 0x2e, 0x0a, 0x16, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x6a, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70,
	0x63, 0x2e, 0x42, 0x69, 0x64, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x22, 0xa2, 0x02, 0x0a, 0x07,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x06, 0x62, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x22, 0x51, 0x0a, 0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xde, 0x02, 0x0a, 0x0f, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x64, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x64,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x22, 0x53, 0x0a, 0x03, 0x42, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x10,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x18,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56,
	0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x19, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x22, 0x28, 0x0a, 0x10, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x4d, 0x0a, 0x11, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x18, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x74, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x08, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x0d,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0x3d, 0x0a,
	0x0d, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x7f, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x69, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e, 0x6a, 0x42, 0x75, 0x72, 0x6e, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a,
	0x18, 0x49, 0x6e, 0x6a, 0x42, 0x75, 0x72, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x6a, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x6a, 0x42, 0x75, 0x72, 0x6e,
	0x74, 0x32, 0x8e, 0x06, 0x0a, 0x13, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x50, 0x43, 0x12, 0x70, 0x0a, 0x0f, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x69,
	0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6e,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x08, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x11, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x12, 0x2f, 0x2e,
	0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5e, 0x0a, 0x09, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x12, 0x27, 0x2e,
	0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x56, 0x32, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x56, 0x32,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x42, 0x69, 0x64, 0x73, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x42, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x42,
	0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x73, 0x0a,
	0x10, 0x49, 0x6e, 0x6a, 0x42, 0x75, 0x72, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x6a, 0x42, 0x75, 0x72,
	0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x6a, 0x42, 0x75, 0x72,
	0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x2f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goadesign_goagen_injective_auction_rpc_proto_rawDescOnce sync.Once
	file_goadesign_goagen_injective_auction_rpc_proto_rawDescData = file_goadesign_goagen_injective_auction_rpc_proto_rawDesc
)

func file_goadesign_goagen_injective_auction_rpc_proto_rawDescGZIP() []byte {
	file_goadesign_goagen_injective_auction_rpc_proto_rawDescOnce.Do(func() {
		file_goadesign_goagen_injective_auction_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_goadesign_goagen_injective_auction_rpc_proto_rawDescData)
	})
	return file_goadesign_goagen_injective_auction_rpc_proto_rawDescData
}

var file_goadesign_goagen_injective_auction_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_goadesign_goagen_injective_auction_rpc_proto_goTypes = []interface{}{
	(*AuctionEndpointRequest)(nil),    // 0: injective_auction_rpc.AuctionEndpointRequest
	(*AuctionEndpointResponse)(nil),   // 1: injective_auction_rpc.AuctionEndpointResponse
	(*Auction)(nil),                   // 2: injective_auction_rpc.Auction
	(*Coin)(nil),                      // 3: injective_auction_rpc.Coin
	(*AuctionContract)(nil),           // 4: injective_auction_rpc.AuctionContract
	(*Bid)(nil),                       // 5: injective_auction_rpc.Bid
	(*AuctionsRequest)(nil),           // 6: injective_auction_rpc.AuctionsRequest
	(*AuctionsResponse)(nil),          // 7: injective_auction_rpc.AuctionsResponse
	(*AuctionsHistoryV2Request)(nil),  // 8: injective_auction_rpc.AuctionsHistoryV2Request
	(*AuctionsHistoryV2Response)(nil), // 9: injective_auction_rpc.AuctionsHistoryV2Response
	(*AuctionV2Request)(nil),          // 10: injective_auction_rpc.AuctionV2Request
	(*AuctionV2Response)(nil),         // 11: injective_auction_rpc.AuctionV2Response
	(*AccountAuctionsV2Request)(nil),  // 12: injective_auction_rpc.AccountAuctionsV2Request
	(*AccountAuctionsV2Response)(nil), // 13: injective_auction_rpc.AccountAuctionsV2Response
	(*AccountAuctionV2)(nil),          // 14: injective_auction_rpc.AccountAuctionV2
	(*ClaimedAssets)(nil),             // 15: injective_auction_rpc.ClaimedAssets
	(*StreamBidsRequest)(nil),         // 16: injective_auction_rpc.StreamBidsRequest
	(*StreamBidsResponse)(nil),        // 17: injective_auction_rpc.StreamBidsResponse
	(*InjBurntEndpointRequest)(nil),   // 18: injective_auction_rpc.InjBurntEndpointRequest
	(*InjBurntEndpointResponse)(nil),  // 19: injective_auction_rpc.InjBurntEndpointResponse
}
var file_goadesign_goagen_injective_auction_rpc_proto_depIdxs = []int32{
	2,  // 0: injective_auction_rpc.AuctionEndpointResponse.auction:type_name -> injective_auction_rpc.Auction
	5,  // 1: injective_auction_rpc.AuctionEndpointResponse.bids:type_name -> injective_auction_rpc.Bid
	3,  // 2: injective_auction_rpc.Auction.basket:type_name -> injective_auction_rpc.Coin
	4,  // 3: injective_auction_rpc.Auction.contract:type_name -> injective_auction_rpc.AuctionContract
	2,  // 4: injective_auction_rpc.AuctionsResponse.auctions:type_name -> injective_auction_rpc.Auction
	2,  // 5: injective_auction_rpc.AuctionsHistoryV2Response.auctions:type_name -> injective_auction_rpc.Auction
	2,  // 6: injective_auction_rpc.AuctionV2Response.auction:type_name -> injective_auction_rpc.Auction
	14, // 7: injective_auction_rpc.AccountAuctionsV2Response.auctions:type_name -> injective_auction_rpc.AccountAuctionV2
	15, // 8: injective_auction_rpc.AccountAuctionV2.claimed_assets:type_name -> injective_auction_rpc.ClaimedAssets
	0,  // 9: injective_auction_rpc.InjectiveAuctionRPC.AuctionEndpoint:input_type -> injective_auction_rpc.AuctionEndpointRequest
	6,  // 10: injective_auction_rpc.InjectiveAuctionRPC.Auctions:input_type -> injective_auction_rpc.AuctionsRequest
	8,  // 11: injective_auction_rpc.InjectiveAuctionRPC.AuctionsHistoryV2:input_type -> injective_auction_rpc.AuctionsHistoryV2Request
	10, // 12: injective_auction_rpc.InjectiveAuctionRPC.AuctionV2:input_type -> injective_auction_rpc.AuctionV2Request
	12, // 13: injective_auction_rpc.InjectiveAuctionRPC.AccountAuctionsV2:input_type -> injective_auction_rpc.AccountAuctionsV2Request
	16, // 14: injective_auction_rpc.InjectiveAuctionRPC.StreamBids:input_type -> injective_auction_rpc.StreamBidsRequest
	18, // 15: injective_auction_rpc.InjectiveAuctionRPC.InjBurntEndpoint:input_type -> injective_auction_rpc.InjBurntEndpointRequest
	1,  // 16: injective_auction_rpc.InjectiveAuctionRPC.AuctionEndpoint:output_type -> injective_auction_rpc.AuctionEndpointResponse
	7,  // 17: injective_auction_rpc.InjectiveAuctionRPC.Auctions:output_type -> injective_auction_rpc.AuctionsResponse
	9,  // 18: injective_auction_rpc.InjectiveAuctionRPC.AuctionsHistoryV2:output_type -> injective_auction_rpc.AuctionsHistoryV2Response
	11, // 19: injective_auction_rpc.InjectiveAuctionRPC.AuctionV2:output_type -> injective_auction_rpc.AuctionV2Response
	13, // 20: injective_auction_rpc.InjectiveAuctionRPC.AccountAuctionsV2:output_type -> injective_auction_rpc.AccountAuctionsV2Response
	17, // 21: injective_auction_rpc.InjectiveAuctionRPC.StreamBids:output_type -> injective_auction_rpc.StreamBidsResponse
	19, // 22: injective_auction_rpc.InjectiveAuctionRPC.InjBurntEndpoint:output_type -> injective_auction_rpc.InjBurntEndpointResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_goadesign_goagen_injective_auction_rpc_proto_init() }
func file_goadesign_goagen_injective_auction_rpc_proto_init() {
	if File_goadesign_goagen_injective_auction_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionsHistoryV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionsHistoryV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuctionV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAuctionsV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAuctionsV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAuctionV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimedAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamBidsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamBidsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjBurntEndpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goadesign_goagen_injective_auction_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjBurntEndpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goadesign_goagen_injective_auction_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goadesign_goagen_injective_auction_rpc_proto_goTypes,
		DependencyIndexes: file_goadesign_goagen_injective_auction_rpc_proto_depIdxs,
		MessageInfos:      file_goadesign_goagen_injective_auction_rpc_proto_msgTypes,
	}.Build()
	File_goadesign_goagen_injective_auction_rpc_proto = out.File
	file_goadesign_goagen_injective_auction_rpc_proto_rawDesc = nil
	file_goadesign_goagen_injective_auction_rpc_proto_goTypes = nil
	file_goadesign_goagen_injective_auction_rpc_proto_depIdxs = nil
}
